{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jessie/Downloads/fullstack_ass/ass/assign/src/Weather.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Weather extends Component {\n  //Define state default values\n  constructor() {\n    super();\n    this.state = {\n      forecast: [],\n      coord: {},\n      weather: [],\n      main: {},\n      wind: {},\n      clouds: {},\n      sys: {}\n    };\n  } //Component Lifecycle Callback\n\n\n  componentDidMount() {\n    // retrieve weather info\n    axios.get(`https:api.openweathermap.org/data/2.5/weather?q=Toronto&appid=0075d6a7c0a4afa060d8299f822f958f`).then(res => {\n      console.log(res.data); // retrieve data objects\n\n      const forecast = res.data;\n      const coord = forecast.coord;\n      const weather = forecast.weather[0];\n      const main = forecast.main;\n      const wind = forecast.wind;\n      const clouds = forecast.clouds;\n      const sys = forecast.sys; // set states\n\n      this.setState({\n        forecast,\n        coord,\n        weather,\n        main,\n        wind,\n        clouds,\n        sys\n      });\n    }).catch(err => {\n      console.error(\"Error : \", err);\n    });\n  }\n\n  render() {\n    // convert unix timestamp\n    const getDT = dt => {\n      var date = new Date(dt * 1000);\n      var hours = date.getHours();\n      var min = date.getMinutes();\n      var date = \"(\" + date + \"; \" + hours + \":\" + min + \")\";\n      return date;\n    };\n\n    var b = this.state.forecast.dt + \"\";\n    var c = parseInt(b); // get icon image\n\n    var icon = 'http://openweathermap.org/img/wn/' + this.state.weather.icon + '@2x.png'; //console.log(icon)\n\n    var temp = parseInt(this.state.main.temp - 273.15) + \"째C\";\n    var temp_feel = parseInt(this.state.main.feels_like - 273.15) + \"째C\";\n    var temp_min = parseInt(this.state.main.temp_min - 273.15) + \"째C\";\n    var temp_max = parseInt(this.state.main.temp_max - 273.15) + \"째C\";\n    var date = new Date(this.state.sys.sunset * 1000);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container-fluid text-center App-header p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-cont p-3 text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"\",\n          children: \"Weather Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [this.state.forecast.name, \", \", this.state.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(latitude: \", this.state.coord.lat, \" \\xA0 longitude: \", this.state.coord.lon, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Put date here!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.weather.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"badge-pill App-logo\",\n          src: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.weather.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.clouds.all, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temp: \", temp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Feels Like: \", temp_feel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Min: \", temp_min]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max: \", temp_max]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.main.pressure, \" hPa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.main.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.wind.speed, \"mps\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.wind.deg, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Convert dates here!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.sys.sunrise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.sys.sunset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: getDT(c)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jessie/Downloads/fullstack_ass/ass/assign/src/Weather.js"],"names":["React","Component","axios","Container","Button","Weather","constructor","state","forecast","coord","weather","main","wind","clouds","sys","componentDidMount","get","then","res","console","log","data","setState","catch","err","error","render","getDT","dt","date","Date","hours","getHours","min","getMinutes","b","c","parseInt","icon","temp","temp_feel","feels_like","temp_min","temp_max","sunset","name","country","lat","lon","description","all","pressure","humidity","speed","deg","sunrise"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class Weather extends Component {\n\n    //Define state default values\n    \n    constructor() {\n        super();\n        this.state = {\n            forecast: [],\n            coord: {},\n            weather: [],\n            main: {},\n            wind: {},\n            clouds: {},\n            sys: {},\n            \n        };\n    }\n    \n     //Component Lifecycle Callback\n    componentDidMount() {\n        // retrieve weather info\n        axios.get(`https:api.openweathermap.org/data/2.5/weather?q=Toronto&appid=0075d6a7c0a4afa060d8299f822f958f`)\n        .then(res => {\n            console.log(res.data);\n            // retrieve data objects\n            const forecast = res.data;\n            const coord = forecast.coord;\n            const weather = forecast.weather[0];\n            const main = forecast.main;\n            const wind = forecast.wind;\n            const clouds = forecast.clouds;\n            const sys = forecast.sys;\n\n            // set states\n            this.setState({ forecast, coord, weather, main, wind,\n                clouds, sys });\n        })\n            .catch(err => {\n                console.error(\"Error : \", err)\n        })\n    }\n\n\n    render() {\n\n// convert unix timestamp\nconst getDT=(dt)=>{\n      var date = new Date(dt * 1000);\n      var hours = date.getHours(); \n        var min = date.getMinutes(); \n\n      var date = \"(\"+date+\"; \"+hours+\":\"+min+\")\"\n      return date;\n}\n\n\nvar b = this.state.forecast.dt+\"\";\nvar c = parseInt(b);\n\n\n\n\n// get icon image\nvar icon = 'http://openweathermap.org/img/wn/' + this.state.weather.icon + '@2x.png';\n//console.log(icon)\n\nvar temp = parseInt(this.state.main.temp - 273.15) + \"째C\"\nvar temp_feel = parseInt(this.state.main.feels_like - 273.15) + \"째C\"\nvar temp_min = parseInt(this.state.main.temp_min - 273.15) + \"째C\"\nvar temp_max = parseInt(this.state.main.temp_max - 273.15) + \"째C\"\n\nvar date = new Date(this.state.sys.sunset * 1000);\n\n        return (\n            <Container className=\"container-fluid text-center App-header p-3\">\n                <div className=\"weather-cont p-3 text-danger\">\n                <h1 className=\"\">Weather Forecast</h1>\n                <h3>{this.state.forecast.name}, {this.state.sys.country}</h3>\n                <p>(latitude: {this.state.coord.lat} &nbsp;\n                    longitude: {this.state.coord.lon})</p>\n                \n                <p>Put date here!!!</p>\n                <p>{this.state.weather.icon}</p>\n                <img className=\"badge-pill App-logo\" src = {icon} />\n                <p>{this.state.weather.description}</p>\n                <p>{this.state.clouds.all}%</p>\n                <p>Temp: {temp}</p>\n                <p>Feels Like: {temp_feel}</p>\n                <p>Min: {temp_min}</p>\n                <p>Max: {temp_max}</p>\n                <p>{this.state.main.pressure} hPa</p>\n                <p>{this.state.main.humidity}%</p>\n                <p>{this.state.wind.speed}mps</p>\n                <p>{this.state.wind.deg}째</p>\n\n                <p>Convert dates here!!!</p>\n                <p>{this.state.sys.sunrise}</p>\n                <p>{this.state.sys.sunset}</p>\n\n\n\n                <h5>{getDT(c)}</h5>\n                </div>\n                \n                \n            </Container>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}