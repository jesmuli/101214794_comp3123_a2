{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jessie/Downloads/fullstack_ass/ass/assign/src/Weather.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Weather extends Component {\n  //Define state default values\n  constructor() {\n    super();\n    this.state = {\n      weather: [],\n      coord: {}\n    };\n  } //Component Lifecycle Callback\n\n\n  componentDidMount() {\n    axios.get(`https:api.openweathermap.org/data/2.5/weather?q=Toronto&appid=0075d6a7c0a4afa060d8299f822f958f`).then(res => {\n      console.log(res.data);\n      const weather = res.data;\n      const coord = weather.coord; //console.log(data.coord)\n\n      this.setState({\n        weather\n      });\n      this.setState({\n        coord\n      });\n    }).catch(err => {\n      console.error(\"Error : \", err);\n    });\n  }\n\n  render() {\n    //const weathermap = this.state.data.wind;\n    //const { data = [] } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), this.state.weather.name, this.state.coord.lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jessie/Downloads/fullstack_ass/ass/assign/src/Weather.js"],"names":["React","Component","axios","Container","Button","Weather","constructor","state","weather","coord","componentDidMount","get","then","res","console","log","data","setState","catch","err","error","render","name","lat"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;AAIA,eAAe,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAE3C;AAEAK,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH,GAV0C,CAY1C;;;AACDC,EAAAA,iBAAiB,GAAG;AAChBR,IAAAA,KAAK,CAACS,GAAN,CAAW,gGAAX,EACCC,IADD,CACMC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,YAAMR,OAAO,GAAGK,GAAG,CAACG,IAApB;AACA,YAAMP,KAAK,GAAGD,OAAO,CAACC,KAAtB,CAHS,CAIT;;AACA,WAAKQ,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACA,WAAKS,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACH,KARD,EASKS,KATL,CASWC,GAAG,IAAI;AACVL,MAAAA,OAAO,CAACM,KAAR,CAAc,UAAd,EAA0BD,GAA1B;AACP,KAXD;AAYH;;AAGDE,EAAAA,MAAM,GAAG;AACT;AAEI;AACA,wBACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,KAAKd,KAAL,CAAWC,OAAX,CAAmBc,IAHxB,EAIK,KAAKf,KAAL,CAAWE,KAAX,CAAiBc,GAJtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA3C0C","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nexport default class Weather extends Component {\n\n    //Define state default values\n    \n    constructor() {\n        super();\n        this.state = {\n            weather: [],\n            coord: {}\n        };\n    }\n    \n     //Component Lifecycle Callback\n    componentDidMount() {\n        axios.get(`https:api.openweathermap.org/data/2.5/weather?q=Toronto&appid=0075d6a7c0a4afa060d8299f822f958f`)\n        .then(res => {\n            console.log(res.data);\n            const weather = res.data;\n            const coord = weather.coord;\n            //console.log(data.coord)\n            this.setState({ weather });\n            this.setState({ coord });\n        })\n            .catch(err => {\n                console.error(\"Error : \", err)\n        })\n    }\n\n\n    render() {\n    //const weathermap = this.state.data.wind;\n    \n        //const { data = [] } = this.state;\n        return (\n            <Container className=\"container-fluid\">\n                <h1 className=\"text-center\">User List</h1>\n                <h1></h1>\n                {this.state.weather.name}\n                {this.state.coord.lat}\n                \n                \n            </Container>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}