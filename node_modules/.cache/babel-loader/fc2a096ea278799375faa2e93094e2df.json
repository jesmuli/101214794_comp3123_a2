{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jessie/Downloads/fullstack_ass/ass/assign/src/Weather.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weather: []\n    };\n  }\n\n  //Component Lifecycle Callback\n  componentDidMount() {\n    axios.get(`https:api.openweathermap.org/data/2.5/weather?q=Toronto&appid=0075d6a7c0a4afa060d8299f822f958f`).then(res => {\n      console.log(res.data);\n      const weather = res.data;\n      console.log(weather.coord);\n      const data = res.data;\n      this.setState({\n        data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.data.coord.lon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), this.state.weather.map(w => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-auto btn-info\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [w.coord.lon, \" \", w.coord.lat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jessie/Downloads/fullstack_ass/ass/assign/src/Weather.js"],"names":["React","Component","axios","Container","Button","Weather","state","weather","componentDidMount","get","then","res","console","log","data","coord","setState","render","lon","map","w","lat"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;AAEA,eAAe,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAG3CK,KAH2C,GAGnC;AACJC,MAAAA,OAAO,EAAE;AADL,KAHmC;AAAA;;AAO1C;AACDC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,KAAK,CAACO,GAAN,CAAW,gGAAX,EACCC,IADD,CACMC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,YAAMP,OAAO,GAAGI,GAAG,CAACG,IAApB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACQ,KAApB;AACA,YAAMD,IAAI,GAAGH,GAAG,CAACG,IAAjB;AACA,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACH,KAPD;AAQH;;AAGDG,EAAAA,MAAM,GAAG;AAEL,wBACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAA,8BAEI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAK,KAAKX,KAAL,CAAWQ,IAAX,CAAgBC,KAAhB,CAAsBG;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIK,KAAKZ,KAAL,CAAWC,OAAX,CAAmBY,GAAnB,CAAwBC,CAAC,iBAClB;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI;AAAA,qBAAIA,CAAC,CAACL,KAAF,CAAQG,GAAZ,OAAkBE,CAAC,CAACL,KAAF,CAAQM,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADP,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAnC0C","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class Weather extends Component {\n\n    //Define state default values\n    state = {\n        weather: []\n    };\n\n     //Component Lifecycle Callback\n    componentDidMount() {\n        axios.get(`https:api.openweathermap.org/data/2.5/weather?q=Toronto&appid=0075d6a7c0a4afa060d8299f822f958f`)\n        .then(res => {\n            console.log(res.data);\n            const weather = res.data;\n            console.log(weather.coord);\n            const data = res.data;\n            this.setState({ data });\n        })\n    }\n\n\n    render() {\n        \n        return (\n            <Container className=\"container-fluid\">\n\n                <h1 className=\"text-center\">User List</h1>\n                <h1>{this.state.data.coord.lon}</h1>\n                {this.state.weather.map (w =>\n                        <div className=\"col-lg-auto btn-info\">\n                            <b>{w.coord.lon} {w.coord.lat}</b>\n                            \n                        </div>\n                    )}\n            </Container>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}